-- CXC3009.A
--
--                             Grant of Unlimited Rights
--
--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,
--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained 
--     unlimited rights in the software and documentation contained herein.
--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making 
--     this public release, the Government intends to confer upon all 
--     recipients unlimited rights  equal to those held by the Government.  
--     These rights include rights to use, duplicate, release or disclose the 
--     released technical data and computer software in whole or in part, in 
--     any manner and for any purpose whatsoever, and to have or permit others 
--     to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED 
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE 
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--*
--
-- OBJECTIVE:
--     Check that an exception propagated from a handler invoked by an
--     interrupt has no effect. Check that the exception causes further
--     execution of the handler to be abandoned.
--    
-- TEST DESCRIPTION:
--     The test checks that, for protected procedures which have been attached
--     to interrupts dynamically, predefined exceptions which are raised in
--     the declarative part have no effect outside the protected procedure.
--     The test also checks that the raising of the exception causes further
--     execution of the protected procedure to be abandoned.
--
--     An anonymous protected object Dynamic_Handler is declared with a pragma 
--     Interrupt_Handler which designates a procedure.
--
--     The test proceeds as follows:
--
--     (1)  The procedure in Dynamic_Handler designated by the pragma
--          Interrupt_Handler is attached to the interrupt
--          ImpDef.Annex_C.Interrupt_To_Generate using the procedure
--          Ada.Interrupts.Attach_Handler.
--
--     (2)  The interrupt corresponding to ImpDef.Annex_C.Interrupt_To_Generate
--          is generated by calling ImpDef.Annex_C.Generate_Interrupt. This
--          call is is made within a block statement which possesses an
--          exception handler.
--
--     (3)  Within the declarative part of the procedure in Dynamic_Handler,
--          Constraint_Error is raised by an object declaration.
--
--     (4)  The test verifies that the procedure in Dynamic_Handler was indeed
--          called, and that the exception caused the execution of the
--          procedure to be abandoned.
--
--     (5)  The test verifies that the block statement's handler for
--          Constraint_Error is not executed.
--
--     Boolean flags are used to determine whether
--     the interrupt handler was called, and whether its execution was
--     abandoned after the exception was raised. Since the exception is raised
--     in the handler's declarative part, flags declared within the protected 
--     object can't be updated before the exception is raised.
--
--     The approach taken by the test is to declare the "Was_Handled" flag
--     outside the protected object. This flag is set by the interrupt handler
--     when it calls a (non-protected) function to initialize a local object.
--     The flag is set to true within this function, and a value is returned
--     which is outside the range of the local object's subtype. The return
--     value is then assigned to the local object, which raises
--     Constraint_Error.
--
-- SPECIAL REQUIREMENTS:
--      This test requires that interrupts be enabled, and that an
--      interrupt (identified by ImpDef.Annex_C.Interrupt_To_Generate)
--      be generated multiple times, at points designated by calls to
--      ImpDef.Annex_C.Generate_Interrupt.
--
-- APPLICABILITY CRITERIA:
--      This test is only applicable for implementations validating the
--      the Systems Programming Annex.
--
--
-- CHANGE HISTORY:
--      27 Oct 95   SAIC    Initial prerelease version (of CXC3004)
--      23 Feb 96   SAIC    Updated ImpDef references to ImpDef.Annex_C.
--      31 Dec 97   EDS     Created CXC3009 by taking dynamic case from
--                          the previous version of CXC3004.
--!

     --==================================================================--


package CXC3009_1 is

   function TC_Set_Handled_Flag return Integer;

   Was_Handled : Boolean := False;


   protected Dynamic_Handler is
      procedure Handle_Interrupt;
      pragma Interrupt_Handler ( Handle_Interrupt );

      function Abandoned return Boolean;
   private
      Was_Abandoned : Boolean := True;
   end Dynamic_Handler;

end CXC3009_1;
